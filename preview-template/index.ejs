<html>
    <head>
        <link rel="icon" href="./favicon.ico" />
        <meta charset="utf-8" />
        <title><%=title%></title>
        <meta
            name="viewport"
            content="width=device-width,user-scalable=no,initial-scale=1,minimum-scale=1,maximum-scale=1,minimal-ui=true"
        />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="full-screen" content="yes" />
        <meta name="screen-orientation" content="portrait" />
        <meta name="x5-fullscreen" content="true" />
        <meta name="360-fullscreen" content="true" />
        <meta name="renderer" content="webkit" />
        <meta name="force-rendering" content="webkit" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />

        <link rel="stylesheet" type="text/css" href="./index.css" />
        <script>
            fetch("/gamePlugin/index.html")
              .then((response) => response.text())
              .then((htmlString) => {
                // 创建一个临时的 DOM 元素来解析 HTML 字符串
                const tempDiv = document.createElement("div");
                tempDiv.innerHTML = htmlString;

                // 提取 script 元素并添加到 head 中
                const scriptElements = tempDiv.querySelectorAll("script");
                scriptElements.forEach((script) => {
                  const newScript = document.createElement("script");
                  // 复制所有属性
                  Array.from(script.attributes).forEach((attr) => {
                    newScript.setAttribute(attr.name, attr.value);
                  });
                  document.head.appendChild(newScript);
                });

                // 提取 link 元素并添加到 head 中
                const linkElements = tempDiv.querySelectorAll('link[rel="stylesheet"]');
                linkElements.forEach((link) => {
                  const newLink = document.createElement("link");
                  // 复制所有属性
                  Array.from(link.attributes).forEach((attr) => {
                    newLink.setAttribute(attr.name, attr.value);
                  });
                  document.head.appendChild(newLink);
                });
              })
              .catch((error) => {
                console.error("Error fetching the HTML:", error);
              });
        </script>
    </head>
    <body style="overflow: hidden;">
        <%- include(cocosToolBar, {config: config}) %>
        <div id="content" class="content" style="overflow: hidden;">
            <div class="contentWrap">
                <div id="GameDiv" class="wrapper">
                    <div id="Cocos3dGameContainer">
                        <canvas id="GameCanvas" tabindex="-1" style="background-color: '';"></canvas>
                    </div>
                    <div id="splash">
                        <div class="progress-bar stripes"><span></span></div>
                    </div>
                    <div id="bulletin">
                        <div id="sceneIsEmpty" class="inner"><%=tip_sceneIsEmpty%></div>
                    </div>
                    <div class="error" id="error">
                        <div class="title">Error <i>(Please open the console to see detailed errors)</i></div>
                        <div class="error-main"></div>
                        <div class="error-stack"></div>
                    </div>
                </div>
                <div id="react-root"></div>
            </div>
        </div>
        <%- include(cocosTemplate, {}) %>
    </body>
</html>
